"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[6944],{2752:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"for-devs/console/settings","title":"Team Settings","description":"The Team settings can only be changed by a user with the platform administrator role. The Team settings are read only for Team members. Ask your platform administrator if any changes need to be made to the Team settings.","source":"@site/docs/for-devs/console/settings.md","sourceDirName":"for-devs/console","slug":"/for-devs/console/settings","permalink":"/docs/for-devs/console/settings","draft":false,"unlisted":false,"editUrl":"https://github.com/linode/linode.github.io/tree/main/docs/for-devs/console/settings.md","tags":[],"version":"current","frontMatter":{"slug":"settings","title":"Team Settings","sidebar_label":"Settings"},"sidebar":"mainSidebar","previous":{"title":"User Management","permalink":"/docs/for-devs/console/user-management"},"next":{"title":"Shell","permalink":"/docs/for-devs/console/shell"}}');var r=t(4848),i=t(8453);const o={slug:"settings",title:"Team Settings",sidebar_label:"Settings"},a=void 0,l={},d=[{value:"Dashboards",id:"dashboards",level:2},{value:"Alerts",id:"alerts",level:3},{value:"Resource Quotas",id:"resource-quotas",level:2},{value:"Network Policies",id:"network-policies",level:2},{value:"Permissions",id:"permissions",level:2}];function c(e){const s={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsx)(s.p,{children:"The Team settings can only be changed by a user with the platform administrator role. The Team settings are read only for Team members. Ask your platform administrator if any changes need to be made to the Team settings."})}),"\n",(0,r.jsx)(s.h2,{id:"dashboards",children:"Dashboards"}),"\n",(0,r.jsxs)(s.p,{children:["When Dashboards are enabled, a dedicated Grafana instance is installed in the Team namespace and pre-configured with dashboards. To see the Grafana dashboards, go to ",(0,r.jsx)(s.code,{children:"Apps"})," and click on Grafana."]}),"\n",(0,r.jsx)(s.p,{children:"The Grafana instance is also used for Loki to show logs."}),"\n",(0,r.jsx)(s.h3,{id:"alerts",children:"Alerts"}),"\n",(0,r.jsx)(s.p,{children:"When Alerts are enabled, a dedicated Alertmanager instance is installed in the Team namespace. The Alertmanager instance receives alerts relevant for the Team from the Platform Prometheus."}),"\n",(0,r.jsx)(s.p,{children:"When a Notification Receiver is configured, Alertmanager will send the Team's alerts to the configured receiver (Slack or Microsoft Teams). Ask your platform administrator to enable Alerts and configure a notification receiver."}),"\n",(0,r.jsx)(s.h2,{id:"resource-quotas",children:"Resource Quotas"}),"\n",(0,r.jsx)(s.p,{children:"Any configured resource quota for the Team are shown here. If the configured resource quota are blocking the Team, then ask your platform administrator to change them."}),"\n",(0,r.jsx)(s.h2,{id:"network-policies",children:"Network Policies"}),"\n",(0,r.jsx)(s.p,{children:"The netwok policies section shows if network policies for the Team are enabled. There are 2 types of network policies:"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Option"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Ingress control"}),(0,r.jsx)(s.td,{children:"When enabled team services will be bound by (ingress) network policies"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Egress control"}),(0,r.jsx)(s.td,{children:"When enabled team service egress traffic will be limited to pre-defined endpoints only"})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"permissions",children:"Permissions"}),"\n",(0,r.jsx)(s.p,{children:"The permissions section shows the permissions of the Team. These permissions are applied to all Team members:"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Action"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Create Services"}),(0,r.jsx)(s.td,{children:"All Team members have the permission to create Services"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Edit Security Policies"}),(0,r.jsx)(s.td,{children:"All Team members have the permission to edit Security Policies"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Use Cloud Shell"}),(0,r.jsx)(s.td,{children:"All Team members have the permission to use the cloud shell"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Download kubeconfig file"}),(0,r.jsx)(s.td,{children:"All Team members have the permission to download the KubeConfig to get Kube API access to the namespace"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Download docker login credentials"}),(0,r.jsx)(s.td,{children:"All Team members have the permission to download the Dockerconfig for the teams project in Harbor"})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(6540);const r={},i=n.createContext(r);function o(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);