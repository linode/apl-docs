"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[5727],{2854:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"for-devs/console/container-images","title":"Container Images","description":"The Container Images self-service feature can be used to build OCI compliant images based on application source code and store the image in the Team\'s private container registry in Harbor.","source":"@site/docs/for-devs/console/container-images.md","sourceDirName":"for-devs/console","slug":"/for-devs/console/container-images","permalink":"/docs/for-devs/console/container-images","draft":false,"unlisted":false,"editUrl":"https://github.com/linode/linode.github.io/tree/main/docs/for-devs/console/container-images.md","tags":[],"version":"current","frontMatter":{"slug":"container-images","title":"Container Images","sidebar_label":"Container Images"},"sidebar":"mainSidebar","previous":{"title":"Code Repositories","permalink":"/docs/for-devs/console/code-repositories"},"next":{"title":"Sealed Secrets","permalink":"/docs/for-devs/console/secrets"}}');var s=i(4848),r=i(8453);const o={slug:"container-images",title:"Container Images",sidebar_label:"Container Images"},l=void 0,a={},c=[{value:"Container Images (all)",id:"container-images-all",level:2},{value:"Create a Container Image",id:"create-a-container-image",level:2},{value:"Check the status of a container image",id:"check-the-status-of-a-container-image",level:2},{value:"Restart a build task",id:"restart-a-build-task",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The Container Images self-service feature can be used to build OCI compliant images based on application source code and store the image in the Team's private container registry in Harbor."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Ask your platform administrator to activate the Harbor App to use this feature."})}),"\n",(0,s.jsx)(n.h2,{id:"container-images-all",children:"Container Images (all)"}),"\n",(0,s.jsx)(n.p,{children:"All Container Images created by the Team are listed here."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Column"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Name"}),(0,s.jsx)(n.td,{children:"The auto-generated name used to identify the Container Image in App Platform"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Type"}),(0,s.jsxs)(n.td,{children:["Type of the build task. ",(0,s.jsx)(n.code,{children:"docker"})," or ",(0,s.jsx)(n.code,{children:"buildpacks"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Tekton"}),(0,s.jsxs)(n.td,{children:["Link to the ",(0,s.jsx)(n.code,{children:"PipelineRun"})," in the Tekton dashboard"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Repository"}),(0,s.jsx)(n.td,{children:"The repository name of the image in the container registry"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Tag"}),(0,s.jsx)(n.td,{children:"The tag of the image in the container registry"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Status"}),(0,s.jsx)(n.td,{children:"The status of the container image"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"create-a-container-image",children:"Create a Container Image"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click ",(0,s.jsx)(n.code,{children:"CREATE CONTAINER IMAGE"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Select the build task to use:"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"Docker"})," to build an image using the ",(0,s.jsx)(n.code,{children:"./Dockerfile"})," in your code repository."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"Buildpacks"})," to build an image from application source using Buildpacks."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Configure the Code Repository"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select the Repository from the list. Only registered ",(0,s.jsx)(n.a,{href:"/docs/for-devs/console/code-repositories",children:"Code Repositories"})," are shown here."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Select the reference (a branch or tag)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["(optional) Change the path. When using the ",(0,s.jsx)(n.code,{children:"Docker"})," build task, the default path is ",(0,s.jsx)(n.code,{children:"Dockerfile"}),". To use a Dockerfile in a specific folder, use ",(0,s.jsx)(n.code,{children:"foldername/Dockerfile"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Optionally: Adjust the ",(0,s.jsx)(n.code,{children:"image name"})," and ",(0,s.jsx)(n.code,{children:"tag"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Optionally: Add Extra Arguments to pass on to the build executor."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Optionally: Create a webhook listener to trigger the build based on a repository webhook event."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The Create webhook listener option is only available when the Git service of the selected repository is ",(0,s.jsx)(n.code,{children:"Gitea"}),". When the create webhook listener option is selected both the event listener and the webhook (in Gitea) will be automatically configured."]})}),"\n",(0,s.jsx)(n.h2,{id:"check-the-status-of-a-container-image",children:"Check the status of a container image"}),"\n",(0,s.jsx)(n.p,{children:"There are 2 options to check the status of the container image"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click on the ",(0,s.jsx)(n.code,{children:"PipelineRun"})," link of in the list of Container Images."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Use the Tekton CLI:"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Start a shell in the console."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the following command:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"tkn pipelineruns list\ntkn pipelinerun logs <pipelinerun-name> -f\n"})}),"\n",(0,s.jsx)(n.h2,{id:"restart-a-build-task",children:"Restart a build task"}),"\n",(0,s.jsx)(n.p,{children:"To restart a build task:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Start a shell in the console."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the following command:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"tkn pipelines list\ntkn pipeline start <pipeline-name> --use-pipelinerun <pipelinerun-name>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);