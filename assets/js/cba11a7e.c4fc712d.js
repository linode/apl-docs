"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[3063],{1420:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var n=o(5893),i=o(1151);const l={slug:"overview",title:"Overview",sidebar_label:"Overview"},t=void 0,r={id:"for-devs/console/overview",title:"Overview",description:"APL Console",source:"@site/docs/for-devs/console/overview.md",sourceDirName:"for-devs/console",slug:"/for-devs/console/overview",permalink:"/docs/for-devs/console/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/console/overview.md",tags:[],version:"current",frontMatter:{slug:"overview",title:"Overview",sidebar_label:"Overview"},sidebar:"mainSidebar",previous:{title:"Create RabbitMQ cluster",permalink:"/docs/get-started/labs/create-rabbitmq-cluster"},next:{title:"Deploy Changes",permalink:"/docs/for-devs/console/deploy-changes"}},c={},a=[{value:"APL Console",id:"apl-console",level:2}];function d(e){const s={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"apl-console",children:"APL Console"}),"\n",(0,n.jsx)(s.p,{children:"APL Console is the web UI of APL and offers access to all integrated apps and self-service features. APL Console has a topbar showing a Team selector. The Team selector allows you to switch between different Teams (if you are a member of different Teams)."}),"\n",(0,n.jsx)(s.p,{children:"The Team view in APL Console gives access to 3 menu sections:"}),"\n",(0,n.jsx)(s.p,{children:"Deploy section:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"deploy-changes",children:"Deploy Changes"}),": Commit changes to the configuration repository"]}),"\n",(0,n.jsx)(s.li,{children:"Revert Changes: Revert your changes made in APL Console"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Self-service section:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/dashboard",children:"Apps"}),": An overview of Team Pod status, resource utilization and vulnerabilities."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/apps",children:"Apps"}),": All the apps available to the team on this platform."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/catalog",children:"Catalog"}),": The Helm charts available for the Team in the Catalog."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/projects",children:"Projects"}),": A list of all Projects created by the team."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/builds",children:"Builds"}),": A list of all Builds created by the team."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/secrets",children:"Sealed Secrets"}),": A list of all Sealed Secrets created by the Team."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/workloads",children:"Workloads"}),": A list of all Workloads created by the Team."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/netpols",children:"Network Policies"}),": A list of all Network Policies created by the team."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/services",children:"Services"}),": A list of all team services."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/security-policies",children:"Security Policies"}),": A list of all Security Policies applicable to the Team."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/settings",children:"Settings"}),": Specific Team configuration options."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/docs/for-devs/console/shell",children:"Shell"}),": Access to the cloud Shell within the context of the Team."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Download links section:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:['A "Download KUBECFG" link to download a KUBECONFIG file that gives access to the namespace of the team selected. Admins can download one with ',(0,n.jsx)(s.code,{children:"cluster-admin"})," permissions (giving access to all namespaces) by setting the team selector to '-'. You can use it like ",(0,n.jsx)(s.code,{children:"export KUBECONFIG=$file_location"})," or by merging it with another KUBECONFIG file like ",(0,n.jsx)(s.code,{children:".kube/config"}),". Please visit the official Kubernetes ",(0,n.jsx)(s.a,{href:"https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/",children:"documentation about managing kube contexts"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"When Harbor is enabled, a link to download the Dockercfg file."}),"\n",(0,n.jsx)(s.li,{children:'When APL uses an automatic generated CA or Let\'s Encrypt staging certificates, a "Download CA" link is provided.'}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,s,o)=>{o.d(s,{Z:()=>r,a:()=>t});var n=o(7294);const i={},l=n.createContext(i);function t(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);