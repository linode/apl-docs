"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[725],{3358:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var s=t(5893),r=t(1151);const n={slug:"netpols",title:"Platform - Netwok Policies",sidebar_label:"Network Policies"},i=void 0,l={id:"for-ops/console/netpols",title:"Platform - Netwok Policies",description:"All known Network Policies on the platform are listed here. Network Policies can be sorted based on:",source:"@site/docs/for-ops/console/netpols.md",sourceDirName:"for-ops/console",slug:"/for-ops/console/netpols",permalink:"/docs/for-ops/console/netpols",draft:!1,unlisted:!1,editUrl:"https://github.com/linode/linode.github.io/tree/main/docs/for-ops/console/netpols.md",tags:[],version:"current",frontMatter:{slug:"netpols",title:"Platform - Netwok Policies",sidebar_label:"Network Policies"},sidebar:"mainSidebar",previous:{title:"Workloads",permalink:"/docs/for-ops/console/workloads"},next:{title:"Services",permalink:"/docs/for-ops/console/services"}},c={},d=[];function a(e){const o={a:"a",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.p,{children:"All known Network Policies on the platform are listed here. Network Policies can be sorted based on:"}),"\n",(0,s.jsxs)(o.table,{children:[(0,s.jsx)(o.thead,{children:(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.th,{children:"Property"}),(0,s.jsx)(o.th,{children:"Description"})]})}),(0,s.jsxs)(o.tbody,{children:[(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Name"}),(0,s.jsx)(o.td,{children:"The name of the Network Policy"})]}),(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Rule type"}),(0,s.jsx)(o.td,{children:"Type of the Network Policy (Ingress or Egress)"})]}),(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:"Team"}),(0,s.jsx)(o.td,{children:"The name of the Team responsible for the build"})]})]})]}),"\n",(0,s.jsxs)(o.p,{children:["A platform admin can also create builds. Make sure to select the correct context (team-name) in the top bar. See ",(0,s.jsx)(o.a,{href:"/docs/for-devs/console/netpols",children:"here"})," for more information about creating builds."]})]})}function h(e={}){const{wrapper:o}={...(0,r.a)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,o,t)=>{t.d(o,{Z:()=>l,a:()=>i});var s=t(7294);const r={},n=s.createContext(r);function i(e){const o=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(n.Provider,{value:o},e.children)}}}]);