"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[5374],{2417:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"get-started/labs/trigger-builds","title":"Trigger Builds","description":"In the previous lab we created a Container Image using the blue repo in Gitea. In this lab we\'ll create a container image using the green repo and trigger the build based on a webhook event.","source":"@site/docs/get-started/labs/trigger-builds.md","sourceDirName":"get-started/labs","slug":"/get-started/labs/trigger-builds","permalink":"/docs/get-started/labs/trigger-builds","draft":false,"unlisted":false,"editUrl":"https://github.com/linode/linode.github.io/tree/main/docs/get-started/labs/trigger-builds.md","tags":[],"version":"current","frontMatter":{"slug":"trigger-builds","title":"Trigger Builds","sidebar_label":"Trigger Builds"},"sidebar":"mainSidebar","previous":{"title":"Create Container Images","permalink":"/docs/get-started/labs/create-images"},"next":{"title":"Manually Push Images","permalink":"/docs/get-started/labs/push-images"}}');var s=t(4848),r=t(8453);const l={slug:"trigger-builds",title:"Trigger Builds",sidebar_label:"Trigger Builds"},o=void 0,d={},a=[{value:"Create a Container Image with create webhook listener enabled",id:"create-a-container-image-with-create-webhook-listener-enabled",level:2},{value:"Trigger the build",id:"trigger-the-build",level:2},{value:"Check the status of the build",id:"check-the-status-of-the-build",level:2}];function h(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["In the previous lab we created a Container Image using the ",(0,s.jsx)(n.code,{children:"blue"})," repo in Gitea. In this lab we'll create a container image using the ",(0,s.jsx)(n.code,{children:"green"})," repo and trigger the build based on a webhook event."]}),"\n",(0,s.jsx)(n.h2,{id:"create-a-container-image-with-create-webhook-listener-enabled",children:"Create a Container Image with create webhook listener enabled"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the left menu, click on ",(0,s.jsx)(n.code,{children:"Container Images"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click on ",(0,s.jsx)(n.code,{children:"CREATE CONTAINER IMAGE"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select the ",(0,s.jsx)(n.code,{children:"Docker"})," build task."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select the ",(0,s.jsx)(n.code,{children:"green"})," repository from the Repository drop-down list."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select the Reference (branch or tag). The ",(0,s.jsx)(n.code,{children:"green"})," repo only has one branch (",(0,s.jsx)(n.code,{children:"main"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Select ",(0,s.jsx)(n.code,{children:"Create webhook listener"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click ",(0,s.jsx)(n.code,{children:"Create Container Image"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["App Platform will now create the Tekton event listener and configure the webhook for the ",(0,s.jsx)(n.code,{children:"green"})," repo."]}),"\n",(0,s.jsxs)(n.p,{children:["Because the build task has not been triggered yet, the status of the container image will show a status ",(0,s.jsx)(n.code,{children:"waiting for first event"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"trigger-the-build",children:"Trigger the build"}),"\n",(0,s.jsxs)(n.p,{children:["You can now trigger the build pipeline by doing a commit in the ",(0,s.jsx)(n.code,{children:"green"})," repo, or by testing the delivery of the webhook. Let's test the delivery of the webhook:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In Gitea, go to the ",(0,s.jsx)(n.code,{children:"Settings"})," (top right) of the ",(0,s.jsx)(n.code,{children:"green"})," repo and then to ",(0,s.jsx)(n.code,{children:"Webhooks"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Click on the webhook that has been created."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the bottom, click on ",(0,s.jsx)(n.code,{children:"Test Delivery"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"check-the-status-of-the-build",children:"Check the status of the build"}),"\n",(0,s.jsxs)(n.p,{children:["The build should now have started. Based on the webhook, Tekton has now created a ",(0,s.jsx)(n.code,{children:"PipelineRun"}),". Let's check the status of the PipelineRun:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the Console, click on ",(0,s.jsx)(n.code,{children:"Container Images"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Because the build for the ",(0,s.jsx)(n.code,{children:"green-main"})," image was triggered, a ",(0,s.jsx)(n.code,{children:"PipelineRun"})," is now running and the status of the Container Image will now show ",(0,s.jsx)(n.code,{children:"in progress"}),". When the build task has completed, the status will show ",(0,s.jsx)(n.code,{children:"ready"}),"."]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the list of Container Images, click on the ",(0,s.jsx)(n.code,{children:"PipelineRun"})," link of the ",(0,s.jsx)(n.code,{children:"green"})," build."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Tekton Dashboard will open and show a list of all the PipelineRuns. It will show all PipelineRuns because when starting the pipeline based on a trigger event, the Tekton ",(0,s.jsx)(n.code,{children:"PipelineRun"})," resource is created based on a template and the Console will not know the exact name of the PipelineRun because the name is automatically generated."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click on the PipelineRun with the name ",(0,s.jsx)(n.code,{children:"docker-trigger-build-green-main-*"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"You can now see the the full log of the build task."}),"\n"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);