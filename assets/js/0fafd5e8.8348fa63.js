"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[5112],{1416:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>c});var t=i(5893),s=i(1151);const n={slug:"monitor-workloads",title:"Monitoring availability",sidebar_label:"Monitor Workloads"},r=void 0,a={id:"get-started/labs/monitor-workloads",title:"Monitoring availability",description:"When your application is deployed, you would of course like to get an alert when you application (service) is not available anymore. To automatically monitor you applications for availability, APL automatically configures a prope to monitor your service.",source:"@site/docs/get-started/labs/monitor-workloads.md",sourceDirName:"get-started/labs",slug:"/get-started/labs/monitor-workloads",permalink:"/docs/get-started/labs/monitor-workloads",draft:!1,unlisted:!1,editUrl:"https://github.com/linode/linode.github.io/tree/main/docs/get-started/labs/monitor-workloads.md",tags:[],version:"current",frontMatter:{slug:"monitor-workloads",title:"Monitoring availability",sidebar_label:"Monitor Workloads"},sidebar:"mainSidebar",previous:{title:"View Container Metrics",permalink:"/docs/get-started/labs/view-metrics"},next:{title:"Using custom metrics",permalink:"/docs/get-started/labs/custom-metrics"}},l={},c=[{value:"Monitor your application for availability",id:"monitor-your-application-for-availability",level:2}];function d(e){const o={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:"When your application is deployed, you would of course like to get an alert when you application (service) is not available anymore. To automatically monitor you applications for availability, APL automatically configures a prope to monitor your service."}),"\n",(0,t.jsx)(o.h2,{id:"monitor-your-application-for-availability",children:"Monitor your application for availability"}),"\n",(0,t.jsxs)(o.ol,{children:["\n",(0,t.jsxs)(o.li,{children:["\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"/docs/get-started/labs/expose-services",children:"Create a Service"})," for your app in APL. The service can have an Exposure ingress of type ",(0,t.jsx)(o.code,{children:"Cluster"})," or ",(0,t.jsx)(o.code,{children:"Ingress"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(o.li,{children:["\n",(0,t.jsx)(o.p,{children:"Open Prometheus:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:(0,t.jsx)(o.img,{alt:"kubecfg",src:i(9287).Z+"",width:"3242",height:"1522"})}),"\n",(0,t.jsxs)(o.ol,{start:"3",children:["\n",(0,t.jsxs)(o.li,{children:["In Prometheus, Go to ",(0,t.jsx)(o.code,{children:"Status"})," and click on ",(0,t.jsx)(o.code,{children:"Targets"}),":"]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:(0,t.jsx)(o.img,{alt:"kubecfg",src:i(7394).Z+"",width:"2968",height:"1920"})}),"\n",(0,t.jsx)(o.p,{children:"In the list of targets you will see:"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:["\n",(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"PodMonitor"})," endpoints of the ",(0,t.jsx)(o.code,{children:"istio sidecars"})," os the Team Workloads"]}),"\n"]}),"\n",(0,t.jsxs)(o.li,{children:["\n",(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"Probes"})," of all the Team services that are exposed"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(o.ol,{start:"4",children:["\n",(0,t.jsxs)(o.li,{children:["In Prometheus, Go to ",(0,t.jsx)(o.code,{children:"Alerts"}),":"]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:(0,t.jsx)(o.img,{alt:"kubecfg",src:i(5292).Z+"",width:"2970",height:"880"})}),"\n",(0,t.jsxs)(o.p,{children:["In the alerts you will see an (inactive) alert for ",(0,t.jsx)(o.code,{children:"ProbeFailing"}),". If the ",(0,t.jsx)(o.code,{children:"State"})," of a Servive Probe is ",(0,t.jsx)(o.code,{children:"Down"})," the Prometheus ",(0,t.jsx)(o.code,{children:"Rule"})," for this alert will fire. When alertmanager is enabled, and an alert notification receiver is configured, you will automatically receive an alert when your exposed Service is down."]})]})}function u(e={}){const{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},5292:(e,o,i)=>{i.d(o,{Z:()=>t});const t=i.p+"assets/images/prometheus-alerts-8b0a876a39c137149412137249531b83.png"},9287:(e,o,i)=>{i.d(o,{Z:()=>t});const t=i.p+"assets/images/prometheus-teams-2527ec5bb92e71a142a91249ffabd4ff.png"},7394:(e,o,i)=>{i.d(o,{Z:()=>t});const t=i.p+"assets/images/targets-up-cc925a02c4de2f0f97fd9efcfa7e9075.png"},1151:(e,o,i)=>{i.d(o,{Z:()=>a,a:()=>r});var t=i(7294);const s={},n=t.createContext(s);function r(e){const o=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(n.Provider,{value:o},e.children)}}}]);