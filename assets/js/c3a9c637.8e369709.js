"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[7906],{3679:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"apps/alertmanager","title":"Alertmanager","description":"About","source":"@site/docs/apps/alertmanager.md","sourceDirName":"apps","slug":"/apps/alertmanager","permalink":"/docs/apps/alertmanager","draft":false,"unlisted":false,"editUrl":"https://github.com/linode/linode.github.io/tree/main/docs/apps/alertmanager.md","tags":[],"version":"current","frontMatter":{"slug":"alertmanager","title":"Alertmanager","sidebar_label":"Alertmanager"},"sidebar":"mainSidebar","previous":{"title":"Apps Overview","permalink":"/docs/apps/apps-overview"},"next":{"title":"Argo CD","permalink":"/docs/apps/argocd"}}');var a=n(4848),s=n(8453);const l={slug:"alertmanager",title:"Alertmanager",sidebar_label:"Alertmanager"},i=void 0,o={},c=[{value:"About",id:"about",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"about",children:"About"}),"\n",(0,a.jsx)(t.p,{children:"Alertmanager handles alerts sent by client applications such as the Prometheus server. It takes care of de-duplicating, grouping, and routing them to the correct receiver integration such as Slack, MS Teams, or OpsGenie. It also takes care of silencing and inhibition of alerts."}),"\n",(0,a.jsxs)(t.p,{children:["Alertmanager is configured to use the global values found under settings' ",(0,a.jsx)(t.a,{href:"/docs/for-ops/console/settings/alerts",children:"alerts"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"A team may decide to override some or all of them, in order to have alerts sent to their own endpoints. Self-service rights to alerting must be enabled for the team (enabled by default for all teams). Each Team can enable a dedicated alertmanager instance."}),"\n",(0,a.jsx)(t.p,{children:"The following receivers are supported:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"Slack"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"Microsoft Teams"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.code,{children:"Ops Genie"})}),"\n",(0,a.jsxs)(t.li,{children:["(default) ",(0,a.jsx)(t.code,{children:"None"})," (will use the ",(0,a.jsx)(t.code,{children:"null"})," receiver to enable the Alertmanager UI)."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var r=n(6540);const a={},s=r.createContext(a);function l(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);