"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[8787],{3656:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"apps/istio","title":"Istio","description":"About","source":"@site/docs/apps/istio.md","sourceDirName":"apps","slug":"/apps/istio","permalink":"/docs/apps/istio","draft":false,"unlisted":false,"editUrl":"https://github.com/linode/linode.github.io/tree/main/docs/apps/istio.md","tags":[],"version":"current","frontMatter":{"slug":"istio","title":"Istio","sidebar_label":"Istio"},"sidebar":"mainSidebar","previous":{"title":"Ingress-nginx","permalink":"/docs/apps/ingress-nginx"},"next":{"title":"Jaeger","permalink":"/docs/apps/jaeger"}}');var n=i(4848),o=i(8453);const r={slug:"istio",title:"Istio",sidebar_label:"Istio"},l=void 0,a={},c=[{value:"About",id:"about",level:2},{value:"Known issues",id:"known-issues",level:2},{value:"Stale Keycloak JWKS cache",id:"stale-keycloak-jwks-cache",level:3},{value:"Istio log errors",id:"istio-log-errors",level:3}];function d(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"about",children:"About"}),"\n",(0,n.jsx)(s.p,{children:"Istio is installed to deliver the following capabilities:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"mTLS enforcement for all traffic that is deemed compromisable."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"egress control, forcing teams to choose explicit egress endpoints."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"advanced routing capabilities such as weight based load balancing (A/B or blue/green testing)."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"known-issues",children:"Known issues"}),"\n",(0,n.jsx)(s.h3,{id:"stale-keycloak-jwks-cache",children:"Stale Keycloak JWKS cache"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"Problem"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"Jwks doesn't have key to match kid or alg from Jwt\n"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Cause"})," The istio-proxy sidecar caches JWKS with a TTL of 20 minutes. The TTL is a hardcoded parameter (",(0,n.jsx)(s.code,{children:"JwtPubKeyRefreshInterval"}),") and cannot be configured. By redeploing keycloak ",(0,n.jsx)(s.code,{children:"kid"})," or ",(0,n.jsx)(s.code,{children:"alg"})," can change, thus JWKS that is cached by istio-proxy sidecar is not valid anymore."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Solution"})," Either wait 20 minutes, so JWKS is refreshed or kill all pods that are referenced by a RequestAuthentication resource. All services that have ",(0,n.jsx)(s.code,{children:"authz.workload"})," set will have one (see: core.yaml)."]}),"\n",(0,n.jsx)(s.h3,{id:"istio-log-errors",children:"Istio log errors"}),"\n",(0,n.jsx)(s.p,{children:"When you see errors in the logs like such:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"error    authorization    skipped rule ns[monitoring]-policy[grafana-dev-clusterid.akamai-apl-net]-rule[0]: :authority must not be used in TCP\n"})}),"\n",(0,n.jsxs)(s.p,{children:["These are not real errors, but logged incorrectly: ",(0,n.jsx)(s.a,{href:"https://github.com/istio/istio/issues/24701#issuecomment-649719089",children:"https://github.com/istio/istio/issues/24701#issuecomment-649719089"})]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>l});var t=i(6540);const n={},o=t.createContext(n);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);