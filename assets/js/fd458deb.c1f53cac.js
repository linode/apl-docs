"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[4837],{4240:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"for-ops/console/netpols","title":"Platform - Netwok Policies","description":"All known Network Policies on the platform are listed here. Network Policies can be sorted based on:","source":"@site/docs/for-ops/console/netpols.md","sourceDirName":"for-ops/console","slug":"/for-ops/console/netpols","permalink":"/docs/for-ops/console/netpols","draft":false,"unlisted":false,"editUrl":"https://github.com/linode/linode.github.io/tree/main/docs/for-ops/console/netpols.md","tags":[],"version":"current","frontMatter":{"slug":"netpols","title":"Platform - Netwok Policies","sidebar_label":"Network Policies"},"sidebar":"mainSidebar","previous":{"title":"Workloads","permalink":"/docs/for-ops/console/workloads"},"next":{"title":"Services","permalink":"/docs/for-ops/console/services"}}');var r=t(4848),n=t(8453);const l={slug:"netpols",title:"Platform - Netwok Policies",sidebar_label:"Network Policies"},i=void 0,c={},d=[];function a(e){const o={a:"a",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.p,{children:"All known Network Policies on the platform are listed here. Network Policies can be sorted based on:"}),"\n",(0,r.jsxs)(o.table,{children:[(0,r.jsx)(o.thead,{children:(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.th,{children:"Property"}),(0,r.jsx)(o.th,{children:"Description"})]})}),(0,r.jsxs)(o.tbody,{children:[(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.td,{children:"Name"}),(0,r.jsx)(o.td,{children:"The name of the Network Policy"})]}),(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.td,{children:"Rule type"}),(0,r.jsx)(o.td,{children:"Type of the Network Policy (Ingress or Egress)"})]}),(0,r.jsxs)(o.tr,{children:[(0,r.jsx)(o.td,{children:"Team"}),(0,r.jsx)(o.td,{children:"The name of the Team responsible for the build"})]})]})]}),"\n",(0,r.jsxs)(o.p,{children:["A platform admin can also create builds. Make sure to select the correct context (team-name) in the top bar. See ",(0,r.jsx)(o.a,{href:"/docs/for-devs/console/netpols",children:"here"})," for more information about creating builds."]})]})}function h(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>l,x:()=>i});var s=t(6540);const r={},n=s.createContext(r);function l(e){const o=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(n.Provider,{value:o},e.children)}}}]);