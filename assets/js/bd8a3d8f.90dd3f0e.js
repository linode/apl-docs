"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[2883],{4837:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"get-started/labs/create-postgresql-db","title":"Create a PostgreSQL database","description":"The Cloudnative POstgreSQL database operator is installed by default. Teams can use the operator and the postgresql quick start to create their own PostgreSQL databases.","source":"@site/docs/get-started/labs/create-postgresql-db.md","sourceDirName":"get-started/labs","slug":"/get-started/labs/create-postgresql-db","permalink":"/docs/get-started/labs/create-postgresql-db","draft":false,"unlisted":false,"editUrl":"https://github.com/linode/linode.github.io/tree/main/docs/get-started/labs/create-postgresql-db.md","tags":[],"version":"current","frontMatter":{"slug":"create-postgresql-db","title":"Create a PostgreSQL database","sidebar_label":"Create a Database"},"sidebar":"mainSidebar","previous":{"title":"Create Projects","permalink":"/docs/get-started/labs/create-projects"},"next":{"title":"Scan Images","permalink":"/docs/get-started/labs/scan-images"}}');var n=t(4848),r=t(8453);const o={slug:"create-postgresql-db",title:"Create a PostgreSQL database",sidebar_label:"Create a Database"},d=void 0,i={},c=[{value:"Create a database",id:"create-a-database",level:2},{value:"Monitoring",id:"monitoring",level:2}];function l(e){const a={admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:["The Cloudnative POstgreSQL database operator is installed by default. Teams can use the operator and the ",(0,n.jsx)(a.code,{children:"postgresql"})," quick start to create their own PostgreSQL databases."]}),"\n",(0,n.jsx)(a.h2,{id:"create-a-database",children:"Create a database"}),"\n",(0,n.jsx)(a.p,{children:"You can create a postgresql database from the Catalog:"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:["Go to ",(0,n.jsx)(a.code,{children:"Catalog"})," in the left menu and click on the ",(0,n.jsx)(a.code,{children:"postgresql"})," template."]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:["Click on ",(0,n.jsx)(a.code,{children:"Values"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(a.p,{children:"Fill in a name for the database."}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(a.p,{children:"Change other parameter values if required."}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:["Click ",(0,n.jsx)(a.code,{children:"Submit"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.p,{children:["The operator will now create the database and add secrets to the team's namespace called ",(0,n.jsx)(a.code,{children:"<database-name>-superuser"})," and ",(0,n.jsx)(a.code,{children:"<database-name>-app"}),". ",(0,n.jsx)(a.code,{children:"<database-name>-superuser"})," contains the secrets for the superuser of the PostgreSQL cluster, whereas the ",(0,n.jsx)(a.code,{children:"<database-name>-app"})," is granted access to the default database with the name set for the database. Each secret contains the username and password for the database with the keys ",(0,n.jsx)(a.code,{children:"username"})," and ",(0,n.jsx)(a.code,{children:"password"}),"."]}),"\n",(0,n.jsxs)(a.p,{children:["You can now provide the username and password to a container as environment variables using a ",(0,n.jsx)(a.code,{children:"secretKeyRef"}),":"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-yaml",children:"env:\n  - name: DB_USER\n    valueFrom:\n      secretKeyRef:\n        name: <database-name>-app\n        key: username\n  - name: DB_PASSWORD\n    valueFrom:\n      secretKeyRef:\n        name: <database-name>-app\n        key: password\n"})}),"\n",(0,n.jsx)(a.admonition,{type:"note",children:(0,n.jsx)(a.p,{children:"Using the superuser credentials for connecting an app is discouraged. The app user has the access it needs for initializing tables etc."})}),"\n",(0,n.jsx)(a.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"postgresql"})," quick start template includes two parameters that can be used to create a ",(0,n.jsx)(a.code,{children:"PodMonitor"})," and a Grafana Dashboard. Set the ",(0,n.jsx)(a.code,{children:"monitoring"})," parameter to ",(0,n.jsx)(a.code,{children:"true"})," to create a PodMonitor and set the ",(0,n.jsx)(a.code,{children:"dashboard"})," parameter to ",(0,n.jsx)(a.code,{children:"true"})," to add a cloudnativepg dashboard to the Team's Grafana. Note that this dashboard can be used to monitor multiple databases so you'll just need to create it once."]})]})}function h(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>d});var s=t(6540);const n={},r=s.createContext(n);function o(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);